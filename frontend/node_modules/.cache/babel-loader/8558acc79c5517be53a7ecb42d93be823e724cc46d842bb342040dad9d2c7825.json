{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useSelector}from'react-redux';import Loader from'../layout/Loader';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{isAuthenticated,loading}=useSelector(state=>state.auth);if(loading){return/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(Loader,{}),\" \"]});// Add a spinner or any loading indicator here\n}if(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useSelector","Loader","jsx","_jsx","jsxs","_jsxs","ProtectedRoute","_ref","children","isAuthenticated","loading","state","auth","to"],"sources":["C:/Github/rushikersclub-web/frontend/src/route/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../layout/Loader';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { isAuthenticated, loading } = useSelector((state) => state.auth);\r\n\r\n  if (loading) {\r\n    return <div> <Loader /> </div>; // Add a spinner or any loading indicator here\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,eAAe,CAAEC,OAAQ,CAAC,CAAGV,WAAW,CAAEW,KAAK,EAAKA,KAAK,CAACC,IAAI,CAAC,CAEvE,GAAIF,OAAO,CAAE,CACX,mBAAOL,KAAA,QAAAG,QAAA,EAAK,GAAC,cAAAL,IAAA,CAACF,MAAM,GAAE,CAAC,IAAC,EAAK,CAAC,CAAE;AAClC,CAEA,GAAI,CAACQ,eAAe,CAAE,CACpB,mBAAON,IAAA,CAACJ,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}