{"ast":null,"code":"import _objectSpread from\"C:/Github/rushikersclub-web/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{LOGIN_REQUEST,LOGIN_SUCCESS,LOGIN_FAILURE,REGISTER_USER_REQUEST,REGISTER_USER_SUCCESS,REGISTER_USER_FAILURE,LOAD_USER_REQUEST,LOAD_USER_SUCCESS,LOAD_USER_FAILURE,LOGOUT_FAILURE,LOGOUT_SUCCESS,CLEAR_ERRORS}from'../constants/userConstants';// const initialState = {\n//   user: null,           // Set initial user as null\n//   isAuthenticated: false,  // User is not authenticated by default\n//   loading: false,       // Indicate whether the state is loading (e.g., during login)\n// };\nconst initialState={user:null,loading:false,error:null};const authReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LOGIN_REQUEST:case REGISTER_USER_REQUEST:case LOAD_USER_REQUEST:return{loading:true,isAuthenticated:false};case LOGIN_SUCCESS:case REGISTER_USER_SUCCESS:case LOAD_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true,loading:false,user:action.payload// Store the user data in the Redux state\n});case LOGOUT_SUCCESS:return{loading:false,isAuthenticated:false,user:null};case LOAD_USER_FAILURE:return{loading:false,isAuthenticated:false,user:null,error:action.payload// Store the error message in the Redux state\n};case LOGOUT_FAILURE:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case LOGIN_FAILURE:case REGISTER_USER_FAILURE:return _objectSpread(_objectSpread({},state),{},{loading:false,isAuthenticated:false,user:null,error:action.payload});case CLEAR_ERRORS:return _objectSpread(_objectSpread({},state),{},{error:null});default:return state;}};export default authReducer;","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOGOUT_FAILURE","LOGOUT_SUCCESS","CLEAR_ERRORS","initialState","user","loading","error","authReducer","state","arguments","length","undefined","action","type","isAuthenticated","_objectSpread","payload"],"sources":["C:/Github/rushikersclub-web/frontend/src/reducers/authReducer.js"],"sourcesContent":["import {\r\n  LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE,\r\n  REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE,\r\n  LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\r\n  LOGOUT_FAILURE, LOGOUT_SUCCESS,\r\n  CLEAR_ERRORS\r\n} from '../constants/userConstants';\r\n\r\n// const initialState = {\r\n//   user: null,           // Set initial user as null\r\n//   isAuthenticated: false,  // User is not authenticated by default\r\n//   loading: false,       // Indicate whether the state is loading (e.g., during login)\r\n// };\r\n\r\nconst initialState = {\r\n  user: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n    case REGISTER_USER_REQUEST:\r\n    case LOAD_USER_REQUEST:\r\n      return {\r\n     \r\n        loading: true,\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_USER_SUCCESS:\r\n    case LOAD_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload  // Store the user data in the Redux state\r\n        \r\n      };\r\n\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };  \r\n\r\n    case LOAD_USER_FAILURE:\r\n      return {\r\n      \r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        error: action.payload  // Store the error message in the Redux state\r\n        \r\n       \r\n      }; \r\n\r\n    case LOGOUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };   \r\n\r\n\r\n    case LOGIN_FAILURE:\r\n    case REGISTER_USER_FAILURE:\r\n    \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        error:action.payload\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n"],"mappings":"yHAAA,OACEA,aAAa,CAAEC,aAAa,CAAEC,aAAa,CAC3CC,qBAAqB,CAAEC,qBAAqB,CAAEC,qBAAqB,CACnEC,iBAAiB,CAAEC,iBAAiB,CAAEC,iBAAiB,CACvDC,cAAc,CAAEC,cAAc,CAC9BC,YAAY,KACP,4BAA4B,CAEnC;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAC,YAAY,CAAG,CACnBC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IACT,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGN,YAAY,IAAE,CAAAS,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC/C,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,CAAAtB,aAAa,CAClB,IAAK,CAAAG,qBAAqB,CAC1B,IAAK,CAAAG,iBAAiB,CACpB,MAAO,CAELQ,OAAO,CAAE,IAAI,CACbS,eAAe,CAAE,KACnB,CAAC,CAEH,IAAK,CAAAtB,aAAa,CAClB,IAAK,CAAAG,qBAAqB,CAC1B,IAAK,CAAAG,iBAAiB,CACpB,OAAAiB,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRM,eAAe,CAAE,IAAI,CACrBT,OAAO,CAAE,KAAK,CACdD,IAAI,CAAEQ,MAAM,CAACI,OAAS;AAAA,GAI1B,IAAK,CAAAf,cAAc,CACjB,MAAO,CACLI,OAAO,CAAE,KAAK,CACdS,eAAe,CAAE,KAAK,CACtBV,IAAI,CAAE,IACR,CAAC,CAEH,IAAK,CAAAL,iBAAiB,CACpB,MAAO,CAELM,OAAO,CAAE,KAAK,CACdS,eAAe,CAAE,KAAK,CACtBV,IAAI,CAAE,IAAI,CACVE,KAAK,CAAEM,MAAM,CAACI,OAAS;AAGzB,CAAC,CAEH,IAAK,CAAAhB,cAAc,CACjB,OAAAe,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRF,KAAK,CAAEM,MAAM,CAACI,OAAO,GAIzB,IAAK,CAAAvB,aAAa,CAClB,IAAK,CAAAG,qBAAqB,CAExB,OAAAmB,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRH,OAAO,CAAE,KAAK,CACdS,eAAe,CAAE,KAAK,CACtBV,IAAI,CAAE,IAAI,CACVE,KAAK,CAACM,MAAM,CAACI,OAAO,GAGxB,IAAK,CAAAd,YAAY,CACf,OAAAa,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRF,KAAK,CAAE,IAAI,GAGf,QACE,MAAO,CAAAE,KAAK,CAChB,CACF,CAAC,CAED,cAAe,CAAAD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}