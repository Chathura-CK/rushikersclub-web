{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOGOUT_SUCCESS, LOGOUT_FAILURE, CLEAR_ERRORS } from '../constants/userConstants';\n\n// Register user\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('https://rushikersclub-web.vercel.app/api/v1/register', userData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: REGISTER_USER_FAILURE,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed'\n    });\n  }\n};\n\n// Login\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('https://rushikersclub-web.vercel.app/api/v1/login', {\n      email,\n      password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true\n    });\n    if (data) {\n      localStorage.setItem('token', data.token);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: data.user\n      });\n    } else {\n      throw new Error('Failed to login');\n    }\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed'\n    });\n  }\n};\n\n// Load user\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const token = localStorage.getItem('token');\n    if (!token) throw new Error(\"No token found, please log in.\");\n    const {\n      data\n    } = await axios.get('https://rushikersclub-web.vercel.app/api/v1/me', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      withCredentials: true\n    });\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    dispatch({\n      type: LOAD_USER_FAILURE,\n      payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to load user'\n    });\n  }\n};\n\n// Logout user\nexport const logout = () => async dispatch => {\n  try {\n    await axios.get('https://rushikersclub-web.vercel.app/api/v1/logout', {\n      withCredentials: true\n    });\n    localStorage.removeItem('token');\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGOUT_FAILURE,\n      payload: 'Logout failed'\n    });\n  }\n};\n\n// Clear errors\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOGOUT_SUCCESS","LOGOUT_FAILURE","CLEAR_ERRORS","register","userData","dispatch","type","data","post","headers","payload","user","error","_error$response","_error$response$data","response","message","login","email","password","withCredentials","localStorage","setItem","token","Error","_error$response2","_error$response2$data","loadUser","getItem","get","Authorization","_error$response3","_error$response3$data","logout","removeItem","clearErrors"],"sources":["C:/Github/rushikersclub-web/frontend/src/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE,\r\n    REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE,\r\n    LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\r\n    LOGOUT_SUCCESS, LOGOUT_FAILURE,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants';\r\n\r\n// Register user\r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: REGISTER_USER_REQUEST });\r\n\r\n        const { data } = await axios.post('https://rushikersclub-web.vercel.app/api/v1/register', userData, {\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n\r\n        dispatch({ type: REGISTER_USER_SUCCESS, payload: data.user });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAILURE,\r\n            payload: error.response?.data?.message || 'Registration failed'\r\n        });\r\n    }\r\n};\r\n\r\n// Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LOGIN_REQUEST });\r\n\r\n        const { data } = await axios.post('https://rushikersclub-web.vercel.app/api/v1/login', \r\n            { email, password }, \r\n            { headers: { 'Content-Type': 'application/json' }, withCredentials: true }\r\n        );\r\n\r\n        if (data) {\r\n            localStorage.setItem('token', data.token);\r\n            dispatch({ type: LOGIN_SUCCESS, payload: data.user });\r\n        } else {\r\n            throw new Error('Failed to login');\r\n        }\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAILURE,\r\n            payload: error.response?.data?.message || 'Login failed'\r\n        });\r\n    }\r\n};\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LOAD_USER_REQUEST });\r\n\r\n        const token = localStorage.getItem('token');\r\n        if (!token) throw new Error(\"No token found, please log in.\");\r\n\r\n        const { data } = await axios.get('https://rushikersclub-web.vercel.app/api/v1/me', {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            withCredentials: true\r\n        });\r\n\r\n        dispatch({ type: LOAD_USER_SUCCESS, payload: data.user });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAILURE,\r\n            payload: error.response?.data?.message || 'Failed to load user'\r\n        });\r\n    }\r\n};\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        await axios.get('https://rushikersclub-web.vercel.app/api/v1/logout', { withCredentials: true });\r\n        localStorage.removeItem('token');\r\n        dispatch({ type: LOGOUT_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({ type: LOGOUT_FAILURE, payload: 'Logout failed' });\r\n    }\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,aAAa,EAAEC,aAAa,EAAEC,aAAa,EAC3CC,qBAAqB,EAAEC,qBAAqB,EAAEC,qBAAqB,EACnEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB,EACvDC,cAAc,EAAEC,cAAc,EAC9BC,YAAY,QACT,4BAA4B;;AAEnC;AACA,OAAO,MAAMC,QAAQ,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEZ;IAAsB,CAAC,CAAC;IAEzC,MAAM;MAAEa;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,sDAAsD,EAAEJ,QAAQ,EAAE;MAChGK,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAClD,CAAC,CAAC;IAEFJ,QAAQ,CAAC;MAAEC,IAAI,EAAEX,qBAAqB;MAAEe,OAAO,EAAEH,IAAI,CAACI;IAAK,CAAC,CAAC;EAEjE,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACZT,QAAQ,CAAC;MACLC,IAAI,EAAEV,qBAAqB;MAC3Bc,OAAO,EAAE,EAAAG,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBN,IAAI,cAAAO,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI;IAC9C,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOd,QAAQ,IAAK;EAC1D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEf;IAAc,CAAC,CAAC;IAEjC,MAAM;MAAEgB;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,mDAAmD,EACjF;MAAEU,KAAK;MAAEC;IAAS,CAAC,EACnB;MAAEV,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAAEW,eAAe,EAAE;IAAK,CAC7E,CAAC;IAED,IAAIb,IAAI,EAAE;MACNc,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEf,IAAI,CAACgB,KAAK,CAAC;MACzClB,QAAQ,CAAC;QAAEC,IAAI,EAAEd,aAAa;QAAEkB,OAAO,EAAEH,IAAI,CAACI;MAAK,CAAC,CAAC;IACzD,CAAC,MAAM;MACH,MAAM,IAAIa,KAAK,CAAC,iBAAiB,CAAC;IACtC;EACJ,CAAC,CAAC,OAAOZ,KAAK,EAAE;IAAA,IAAAa,gBAAA,EAAAC,qBAAA;IACZrB,QAAQ,CAAC;MACLC,IAAI,EAAEb,aAAa;MACnBiB,OAAO,EAAE,EAAAe,gBAAA,GAAAb,KAAK,CAACG,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBlB,IAAI,cAAAmB,qBAAA,uBAApBA,qBAAA,CAAsBV,OAAO,KAAI;IAC9C,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMW,QAAQ,GAAGA,CAAA,KAAM,MAAOtB,QAAQ,IAAK;EAC9C,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAkB,CAAC,CAAC;IAErC,MAAM0B,KAAK,GAAGF,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACL,KAAK,EAAE,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;IAE7D,MAAM;MAAEjB;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAACuC,GAAG,CAAC,gDAAgD,EAAE;MAC/EpB,OAAO,EAAE;QAAEqB,aAAa,EAAE,UAAUP,KAAK;MAAG,CAAC;MAC7CH,eAAe,EAAE;IACrB,CAAC,CAAC;IAEFf,QAAQ,CAAC;MAAEC,IAAI,EAAER,iBAAiB;MAAEY,OAAO,EAAEH,IAAI,CAACI;IAAK,CAAC,CAAC;EAE7D,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAmB,gBAAA,EAAAC,qBAAA;IACZ3B,QAAQ,CAAC;MACLC,IAAI,EAAEP,iBAAiB;MACvBW,OAAO,EAAE,EAAAqB,gBAAA,GAAAnB,KAAK,CAACG,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBxB,IAAI,cAAAyB,qBAAA,uBAApBA,qBAAA,CAAsBhB,OAAO,KAAI;IAC9C,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMiB,MAAM,GAAGA,CAAA,KAAM,MAAO5B,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMf,KAAK,CAACuC,GAAG,CAAC,oDAAoD,EAAE;MAAET,eAAe,EAAE;IAAK,CAAC,CAAC;IAChGC,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChC7B,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAe,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZP,QAAQ,CAAC;MAAEC,IAAI,EAAEL,cAAc;MAAES,OAAO,EAAE;IAAgB,CAAC,CAAC;EAChE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMyB,WAAW,GAAGA,CAAA,KAAO9B,QAAQ,IAAK;EAC3CA,QAAQ,CAAC;IAAEC,IAAI,EAAEJ;EAAa,CAAC,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}